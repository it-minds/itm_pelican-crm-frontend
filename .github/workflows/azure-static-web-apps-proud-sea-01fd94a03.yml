name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  NODE_OPTIONS: --max-old-space-size=8192
  AZURE_WEBAPP_NAME: pelican-linux-web-app # set this to your application's name
  NODE_VERSION: '16.17.0' # set this to the node version to use

jobs:
  build-and-deploy:
    if: github.event_name == 'push' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Build and Deploy
    permissions:
      contents: read
      id-token: write
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
        with:
          submodules: true
      - name: 'Login to azure'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies
        run: |
          yarn install --pure-lockfile
          yarn graphql-codegen
          yarn build
        env:
          NODE_ENV: prod
      - name: Zip Release
        uses: TheDoctor0/zip-release@0.6.1
        with:
          filename: release.zip
          path: ./dist/*
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: backoffice-frontend-app
          path: release.zip
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: backoffice-frontend-app
      - name: Deploy Webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: release.zip
          startup-command: npx serve ~/../home/site/wwwroot/dist/ -p $PORT

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_PROUD_SEA_01FD94A03 }}
          action: 'close'
